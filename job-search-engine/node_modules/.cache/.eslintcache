[{"/Users/obi/DEV/Strive/Module07/JobSearchEngine/job-search-engine/src/index.js":"1","/Users/obi/DEV/Strive/Module07/JobSearchEngine/job-search-engine/src/App.js":"2","/Users/obi/DEV/Strive/Module07/JobSearchEngine/job-search-engine/src/reportWebVitals.js":"3","/Users/obi/DEV/Strive/Module07/JobSearchEngine/job-search-engine/src/component/Home.jsx":"4","/Users/obi/DEV/Strive/Module07/JobSearchEngine/job-search-engine/src/component/SearchBar.jsx":"5","/Users/obi/DEV/Strive/Module07/JobSearchEngine/job-search-engine/src/component/Jobs.jsx":"6","/Users/obi/DEV/Strive/Module07/JobSearchEngine/job-search-engine/src/component/SingleCompany.jsx":"7","/Users/obi/DEV/Strive/Module07/JobSearchEngine/job-search-engine/src/component/SearchCategory.jsx":"8"},{"size":500,"mtime":1643022909450,"results":"9","hashOfConfig":"10"},{"size":505,"mtime":1643056901675,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1643022909450,"results":"12","hashOfConfig":"10"},{"size":2306,"mtime":1643062956981,"results":"13","hashOfConfig":"10"},{"size":333,"mtime":1643057438424,"results":"14","hashOfConfig":"10"},{"size":1554,"mtime":1643063050633,"results":"15","hashOfConfig":"10"},{"size":1255,"mtime":1643048296043,"results":"16","hashOfConfig":"10"},{"size":1244,"mtime":1643063429287,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1h7n35x",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"23"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/obi/DEV/Strive/Module07/JobSearchEngine/job-search-engine/src/index.js",[],["39","40"],"/Users/obi/DEV/Strive/Module07/JobSearchEngine/job-search-engine/src/App.js",[],["41","42"],"/Users/obi/DEV/Strive/Module07/JobSearchEngine/job-search-engine/src/reportWebVitals.js",[],"/Users/obi/DEV/Strive/Module07/JobSearchEngine/job-search-engine/src/component/Home.jsx",["43"],"\nimport Jobs from './Jobs'\nimport { Container, Col, Row } from 'react-bootstrap'\nimport { useState, useEffect } from 'react'\nimport CategorySearch from './SearchCategory'\nimport SearchBar from './SearchBar'\n\n\n\nconst Home = () => {\n\n    const [data, setData] = useState([])\n    const [searchInput, setSearchInput] = useState()\n    const [category, setCategory] = useState()\n\n    console.log(\"Home\", data)\n    console.log(\"category\", category)\n\n    const fetchJobs = async () => {\n        try {\n            let resp = await fetch(`https://strive-jobs-api.herokuapp.com/jobs?search=${searchInput}&limit=10`)\n            if (resp.ok) {\n                let data = await resp.json()\n                setData(data.data)\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const fetchJobsCategory = async () => {\n        try {\n            let resp = await fetch(`https://strive-jobs-api.herokuapp.com/jobs?category=${category}&limit=10`)\n            if (resp.ok) {\n                let data = await resp.json()\n                setData(data.data)\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const handelSearch = (e) => {\n        setSearchInput(e.target.value)\n    }\n    const handleDropdownChange = (e) => {\n        setCategory(e.target.value)\n        console.log(\"dropdown\")\n    }\n\n    useEffect(() => {\n        fetchJobs(searchInput)\n        fetchJobsCategory(category)\n    }, [searchInput, category])\n\n    return (\n        <>\n            <div className=\"wrapper\">\n                <h1>Search Jobs!</h1>\n                <div className=\"d-flex align-items-center mt-n5\">\n                    <CategorySearch category={category} handleDropdownChange={handleDropdownChange} />\n                    <SearchBar searchInput={searchInput} handelSearch={handelSearch} />\n                </div>\n            </div>\n            <Container className=\"job_details_container\">\n                <Row>\n                    <Col md={4}>\n                        {\n                            data?.map(d => {\n                                return <Jobs key={d._id} data={d} />\n                            })\n                        }\n                    </Col>\n                </Row>\n            </Container>\n        </>\n    )\n}\n\nexport default Home","/Users/obi/DEV/Strive/Module07/JobSearchEngine/job-search-engine/src/component/SearchBar.jsx",[],"/Users/obi/DEV/Strive/Module07/JobSearchEngine/job-search-engine/src/component/Jobs.jsx",["44"],"/Users/obi/DEV/Strive/Module07/JobSearchEngine/job-search-engine/src/component/SingleCompany.jsx",["45"],"import { useParams } from 'react-router-dom'\nimport { useEffect, useState } from 'react'\nimport { Container } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nconst SingleCompany = () => {\n\n    const { company } = useParams()\n    const [companyDetails, setCompanyDetails] = useState([])\n    console.log(companyDetails)\n\n    const fetchCompanyDetails = async () => {\n        try {\n            let resp = await fetch(`https://strive-jobs-api.herokuapp.com/jobs?company=${company}&limit=20`)\n            if (resp.ok) {\n                let data = await resp.json()\n                setCompanyDetails(data.data)\n            }\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n\n    useEffect(() => {\n        fetchCompanyDetails()\n    }, [])\n\n    return (\n        <Container>\n            <Link to=\"/\" > <div className=\"my-5\">Back to search</div> </Link>\n            {\n                companyDetails && companyDetails.map((detail) => (\n                    <div>\n                        <h3>{detail.company_name}</h3>\n                        <p>{detail.title}</p>\n                        <p>{detail.url}</p>\n                    </div>\n                ))\n            }\n        </Container>\n    )\n}\n\nexport default SingleCompany",["46","47"],"/Users/obi/DEV/Strive/Module07/JobSearchEngine/job-search-engine/src/component/SearchCategory.jsx",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"48","replacedBy":"52"},{"ruleId":"50","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":54,"column":8,"nodeType":"56","endLine":54,"endColumn":31,"suggestions":"57"},{"ruleId":"58","severity":1,"message":"59","line":4,"column":34,"nodeType":"60","messageId":"61","endLine":4,"endColumn":45},{"ruleId":"54","severity":1,"message":"62","line":27,"column":8,"nodeType":"56","endLine":27,"endColumn":10,"suggestions":"63"},{"ruleId":"48","replacedBy":"64"},{"ruleId":"50","replacedBy":"65"},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],["66"],["67"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchJobs' and 'fetchJobsCategory'. Either include them or remove the dependency array.","ArrayExpression",["68"],"no-unused-vars","'description' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'fetchCompanyDetails'. Either include it or remove the dependency array.",["69"],["66"],["67"],"no-global-assign","no-unsafe-negation",{"desc":"70","fix":"71"},{"desc":"72","fix":"73"},"Update the dependencies array to be: [searchInput, category, fetchJobs, fetchJobsCategory]",{"range":"74","text":"75"},"Update the dependencies array to be: [fetchCompanyDetails]",{"range":"76","text":"77"},[1456,1479],"[searchInput, category, fetchJobs, fetchJobsCategory]",[769,771],"[fetchCompanyDetails]"]